"Category","Mnemonic","Description"
"Opcode","AND","Bitwise AND between register and operand"
"Opcode","EOR","Bitwise Exclusive OR between register and operand"
"Opcode","SUB","Subtract operand from register"
"Opcode","RSB","Reverse Subtract register from operand"
"Opcode","ADD","Add operand to register"
"Opcode","ADC","Add operand to register with carry"
"Opcode","SBC","Subtract operand from register with borrow"
"Opcode","RSC","Reverse Subtract register from operand with borrow"
"Opcode","TST","Perform bitwise AND and set flags"
"Opcode","TEQ","Perform bitwise XOR and set flags"
"Opcode","CMP","Subtract operand from register and set flags"
"Opcode","CMN","Compare negative operand with register and set flags"
"Opcode","LDR","Load word from memory to register"
"Opcode","LDRB","Load Byte from memory to register"
"Opcode","STR","Store register word to memory"
"Opcode","STRB","Store Byte from register to memory"
"Opcode","LDM","Load multiple registers from memory"
"Opcode","STM","Store multiple registers to memory"
"Opcode","CDP","Coprocessor data processing operation"
"Opcode","LDC","Load data to coprocessor"
"Opcode","STC","Store data from coprocessor"
"Opcode","MCR","Transfer data from ARM register to coprocessor"
"Opcode","MRC","Transfer data from coprocessor to ARM register"
"Opcode","B","Unconditional branch"
"Opcode","BL","Branch and store return address"
"Opcode","SWI","Software Interrupt (with specific calls)"
"Opcode","BMI","Branch if minus"
"Opcode","BNE","Branch if not equal (zero flag not set)"
"Opcode","LDRD","Load Doubleword from memory to registers"
"Opcode","MOV","Move value to register (can be considered as ADD with a second operand of 0)"
"Opcode","ADR","Load register with memory address (a pseudo-instruction, often implemented as a PC-relative ADD)"
"Opcode","ADDPL","Add to PL (Priority Level), not a standard ARM instruction (assumed for completeness, but verify context)"
"Opcode","STREQ","Set if equal, not directly found; possibly a pseudo-instruction or specific to a variant (e.g., ` MOVEQ` in some ARM assemblers)"
"Opcode","SUBPL","Subtract from PL (Priority Level), not a standard ARM instruction (assumed for completeness, but verify context)"
"Opcode","SUBS","Subtract and set flags (similar to SUB, but updates the condition flags)"
"Opcode","STRPL","Store to PL (Priority Level), not a standard ARM instruction (assumed for completeness, but verify context)"
"Directive","EQU","Define a symbolic constant"
"Directive","DEFC","Define a constant (alternative to EQU)"
"Directive","*=","Set origin/starting address"
"Directive","ORG","Set origin/starting address"
"Directive","DS","Define storage (reserve bytes)"
"Directive","DCB","Define constant byte"
"Directive","DCD","Define constant doubleword"
"Directive","ALIGN","Align memory"
"Directive","OPT","Optimization directive"
"Directive","EQUD","EQUate Double (for clarity)"
"Directive","EQUB","EQUate (?)"
"Macro/Inline Function","FNuno","Used for scrolling (part of FNwait)"
"Macro/Inline Function","FNdue","Used for scrolling (part of FNwait)"
"Macro/Inline Function","FNtre","Used for scrolling (part of FNwait)"
"Macro/Inline Function","FNquattro","Used for scrolling (part of FNwait)"
"Macro/Inline Function","FNcinque","Used for scrolling (part of FNwait)"
"Macro/Inline Function","FNcinqueb","Used for scrolling (part of FNwait)"
"Macro/Inline Function","FNwait","Wait for a short period (utilizes SWI "OS_Byte")"